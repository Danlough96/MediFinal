package com.example.medical;

import java.sql.ResultSet;
import java.util.Date;

public class User {
	/*
	 * Jeff Vincent v1.0
	 * User needs to have previously registered using UserRegister class
	 * They will need submit their UserName and Password to get get rest of data populated
	 * otherwise an exception is raised
	 */

	
	protected int userID; //generated by MySQL database, so no set included
	protected String userName; //255 characters
	protected String userFirstName; //255 characters
	protected String userLastName; //255 characters
	protected String userEmail; //255 characters
	protected String userPhoneNo; //11 characters
	protected Date userDateJoined; //generated by MySQL database, so no set included
	
	
	public User(String userName, String userPassword) throws Exception {
		//run select query - if userName and userPassword will return user details
		//new users are added in UserRegister subclass
		String str = "SELECT userID, userFirstName, userLastName, userEmail, userPhoneNo, userDateJoined "
				+ "FROM tblusers WHERE userName = '" + userName + "' AND userPassword = '" + userPassword + "';";
		try {
		ResultSet rs = DBConnect.runSelectQuery(str);
		//rs.last();
        if (rs.last()) {//there should only be one row returned, if none 
        	this.userID = rs.getInt("userID");
    		this.userFirstName = rs.getString("userFirstName");
    		this.userLastName = rs.getString("userLastName");
    		this.userEmail = rs.getString("userEmail");
    		this.userPhoneNo = rs.getString("userPhoneNo");
    		this.userName = userName;
    		this.userDateJoined = rs.getDate("userDateJoined");
        	
        }else {
        	
        	throw new  NullPointerException("No record returned. Password and/or User Name must be wrong");
        }
		
		}catch(Exception e){
			throw e;
			//System.out.println(e.toString());

		}
	}
	
	protected String getUserWholeName() {
		//just in case you need the FirstName LastName as a string...
		return this.userFirstName + " " + this.userLastName;
	}

	protected void updateUserDets(String userFirstName, String userLastName, String userEmail, String userPhoneNo) throws Exception {
		/*
		 * The username can't be changed. If the user has only changed one of the variables, pass the 
		 * old values back in when you call this method - or use te individual methods below.
		 */
		try {
		String str = "UPDATE tblusers SET userFirstName = '" + userFirstName + "', userLastName = '" + userLastName
				+ "', userEmail = '" + userEmail + "', userPhoneNo = '" + userPhoneNo + "' "
				+ " WHERE UserID = " + this.userID + ";";
		
		DBConnect.runUpdateQuery(str);
		//if there is no Exception raised the values stored in this class variable are now updated
		this.userFirstName = userFirstName;
		this.userLastName = userLastName;
		this.userEmail = userEmail;
		this.userPhoneNo = userPhoneNo;
		}catch(Exception e) {
			throw e;
			//System.out.println(e.toString());
		}
		
	}
	
	protected void setuserFirstName(String userFirstName) throws Exception {
		try {
			String str = "UPDATE tblusers SET userFirstName = '" + userFirstName + "' "
					+ " WHERE UserID = " + this.userID + ";";
		
		DBConnect.runUpdateQuery(str);
		//if there is no Exception raised the values stored in this class variable are now updated
		this.userFirstName = userFirstName;

		}catch(Exception e) {
			throw e;
			//System.out.println(e.toString());
		}
		
	}
	
	protected void setuserLastName(String userLastName) throws Exception {
		try {
			String str = "UPDATE tblusers SET userLaststName = '" + userLastName + "' "
					+ " WHERE UserID = " + this.userID + ";";
		
		DBConnect.runUpdateQuery(str);
		//if there is no Exception raised the values stored in this class variable are now updated
		this.userLastName = userLastName;

		}catch(Exception e) {
			throw e;
			//System.out.println(e.toString());
		}
		
	}
	
	protected void setuserEmail(String userEmail) throws Exception {
		try {
			String str = "UPDATE tblusers SET userEmail = '" + userEmail + "' "
					+ " WHERE UserID = " + this.userID + ";";
		
		DBConnect.runUpdateQuery(str);
		//if there is no Exception raised the values stored in this class variable are now updated
		this.userEmail = userEmail;

		}catch(Exception e) {
			throw e;
			//System.out.println(e.toString());
		}
		
	}
	
	protected void setuserPhoneNo(String userPhoneNo) throws Exception {
		try {
			String str = "UPDATE tblusers SET userPhoneNo = '" + userPhoneNo + "' "
					+ " WHERE UserID = " + this.userID + ";";
		
		DBConnect.runUpdateQuery(str);
		//if there is no Exception raised the values stored in this class variable are now updated
		this.userPhoneNo = userPhoneNo;

		}catch(Exception e) {
			throw e;
			//System.out.println(e.toString());
		}
		
	}
	
	protected void setuserName(String userName) throws Exception {
		try {
			String str = "UPDATE tblusers SET userName = '" + userName + "' "
					+ " WHERE UserID = " + this.userID + ";";
		
		DBConnect.runUpdateQuery(str);
		//if there is no Exception raised the values stored in this class variable are now updated
		this.userName = userName;

		}catch(Exception e) {
			throw e;
			//System.out.println(e.toString());
		}
		
	}
	
	protected void deleteUser()  throws Exception{
		//use this carefully!! There is no going back...
		//ALL DATA relating to this user will be deleted
		//You will need the USERID to have been set in the class variables
		try {
			String str = "DELETE FROM tblusers WHERE userID = " + this.userID;
			DBConnect.runUpdateQuery(str);
			str = "DELETE FROM tblevents WHERE eventPatientID = " + this.userID;
			DBConnect.runUpdateQuery(str);
			str = "DELETE FROM tblrelationships WHERE relPatientID = " + this.userID;
			DBConnect.runUpdateQuery(str);
			str = "DELETE FROM tbleventlog WHERE userID = " + this.userID;
			DBConnect.runUpdateQuery(str);

        	this.userID = 0;
    		this.userFirstName = "";
    		this.userLastName = "";
    		this.userEmail = "";
    		this.userPhoneNo = "";
    		this.userName = "";
    		this.userDateJoined = null;
			
			}catch(Exception e) {
				throw e;
				//System.out.println(e.toString());
			}
	}
	
	protected void setUserPassword(int userID, String oldPassword, String newPassword) throws Exception{
		/*change the users password. Needs userID (get from class variable and existing and 
		 * new password included when calling the method. Ensure that each entry or check of 
		 * the password passes it through the CryptWithMD5 method.
		 * This means that the password stored in the database is encrypted. Any comparison tests
		 * should also be encrypted and the resultant string compared
		 * 
		 * The double entry and comparison of the new password will need be done by the front end
		 */
		String str = "UPDATE tblusers SET userPassword = '" + newPassword + "' " +
				"WHERE userID = '" + userID + "' AND userPassword = '" + oldPassword + "';";
		try {
			DBConnect.runUpdateQuery(str);

		}catch(Exception e){
			throw e;
			//System.out.println(e.toString());

		}

	}

	
}
